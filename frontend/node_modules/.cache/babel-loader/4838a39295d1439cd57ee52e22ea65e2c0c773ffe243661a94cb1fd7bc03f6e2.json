{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\GroupFlow Project\\\\GroupFlow\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { Card, Button } from 'react-bootstrap';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = props => {\n  _s();\n  const [background, setBackground] = useState('');\n  const [editing, setEditing] = useState(false);\n  const DeleteTask = async () => {\n    await axios.delete(`http://127.0.0.1:8000/api/tasks/${props.id}/`);\n    props.changeFlag();\n  };\n  useEffect(() => {\n    const load_status = async () => {\n      if (props.status === \"IN PROGRESS\") {\n        setBackground(\"primary\");\n      } else if (props.status === \"STUCK\") {\n        setBackground(\"danger\");\n      } else if (props.status === \"COMPLETED\") {\n        setBackground(\"success\");\n      }\n    };\n    load_status();\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bg: background,\n    text: \"white\",\n    className: \"group-item\",\n    style: {\n      width: \"50rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: editing === false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [props.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: props.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Due Date: \", props.due_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"STATUS: \", props.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => DeleteTask(),\n          variant: \"warning\",\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEditing(true),\n          variant: \"light\",\n          children: \" Edit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        onClick: () => setEditing(false),\n        children: \" Done \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"+/AHakB8ALYpzDH0BdhgUZHPyg8=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["axios","Card","Button","useState","useEffect","TaskList","props","background","setBackground","editing","setEditing","DeleteTask","delete","id","changeFlag","load_status","status","width","title","description","due_date"],"sources":["D:/Downloads/GroupFlow Project/GroupFlow/frontend/src/components/TaskList.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {Card, Button} from 'react-bootstrap'\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst TaskList = (props) => {\r\n    const [background, setBackground] = useState('')\r\n    const [editing, setEditing] = useState(false)\r\n\r\n    const DeleteTask = async () =>{\r\n        await axios.delete(`http://127.0.0.1:8000/api/tasks/${props.id}/`)\r\n        props.changeFlag()\r\n    }\r\n    useEffect(() => {\r\n        const load_status = async ()=>{\r\n            if(props.status === \"IN PROGRESS\"){\r\n                setBackground(\"primary\")\r\n            }\r\n            else if(props.status === \"STUCK\"){\r\n                setBackground(\"danger\")\r\n            }\r\n            else if(props.status === \"COMPLETED\"){\r\n                setBackground(\"success\")\r\n            }\r\n        }\r\n        load_status()\r\n  \r\n    \r\n      }, [props])\r\n\r\n\r\n    return(\r\n        <Card bg={background} text=\"white\" className=\"group-item\" style={{width: \"50rem\"}}>\r\n            <Card.Body>  \r\n            { editing === false ?\r\n                <>\r\n                <Card.Header>{props.title} </Card.Header>\r\n                <Card.Text>{props.description}</Card.Text>\r\n                <Card.Text>Due Date: {props.due_date}</Card.Text>\r\n                <Card.Text>STATUS: {props.status}</Card.Text>\r\n                <Button onClick={() => DeleteTask()} variant =\"warning\"> Delete </Button>\r\n                <Button onClick={() => setEditing(true)} variant=\"light\"> Edit </Button>\r\n                </>\r\n            :\r\n                <Button size=\"sm\" onClick={()=> setEditing(false)}> Done </Button>\r\n            }\r\n            </Card.Body>  \r\n        </Card>\r\n    )\r\n};\r\n\r\nexport default TaskList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,EAAEC,MAAM,QAAO,iBAAiB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAE5C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMQ,UAAU,GAAG,YAAW;IAC1B,MAAMX,KAAK,CAACY,MAAM,CAAE,mCAAkCN,KAAK,CAACO,EAAG,GAAE,CAAC;IAClEP,KAAK,CAACQ,UAAU,EAAE;EACtB,CAAC;EACDV,SAAS,CAAC,MAAM;IACZ,MAAMW,WAAW,GAAG,YAAU;MAC1B,IAAGT,KAAK,CAACU,MAAM,KAAK,aAAa,EAAC;QAC9BR,aAAa,CAAC,SAAS,CAAC;MAC5B,CAAC,MACI,IAAGF,KAAK,CAACU,MAAM,KAAK,OAAO,EAAC;QAC7BR,aAAa,CAAC,QAAQ,CAAC;MAC3B,CAAC,MACI,IAAGF,KAAK,CAACU,MAAM,KAAK,WAAW,EAAC;QACjCR,aAAa,CAAC,SAAS,CAAC;MAC5B;IACJ,CAAC;IACDO,WAAW,EAAE;EAGf,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAGb,oBACI,QAAC,IAAI;IAAC,EAAE,EAAEC,UAAW;IAAC,IAAI,EAAC,OAAO;IAAC,SAAS,EAAC,YAAY;IAAC,KAAK,EAAE;MAACU,KAAK,EAAE;IAAO,CAAE;IAAA,uBAC9E,QAAC,IAAI,CAAC,IAAI;MAAA,UACRR,OAAO,KAAK,KAAK,gBACf;QAAA,wBACA,QAAC,IAAI,CAAC,MAAM;UAAA,WAAEH,KAAK,CAACY,KAAK,EAAC,GAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eACzC,QAAC,IAAI,CAAC,IAAI;UAAA,UAAEZ,KAAK,CAACa;QAAW;UAAA;UAAA;UAAA;QAAA,QAAa,eAC1C,QAAC,IAAI,CAAC,IAAI;UAAA,WAAC,YAAU,EAACb,KAAK,CAACc,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eACjD,QAAC,IAAI,CAAC,IAAI;UAAA,WAAC,UAAQ,EAACd,KAAK,CAACU,MAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eAC7C,QAAC,MAAM;UAAC,OAAO,EAAE,MAAML,UAAU,EAAG;UAAC,OAAO,EAAE,SAAS;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAS,eACzE,QAAC,MAAM;UAAC,OAAO,EAAE,MAAMD,UAAU,CAAC,IAAI,CAAE;UAAC,OAAO,EAAC,OAAO;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,gBACrE,gBAEH,QAAC,MAAM;QAAC,IAAI,EAAC,IAAI;QAAC,OAAO,EAAE,MAAKA,UAAU,CAAC,KAAK,CAAE;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA;EAE1D;IAAA;IAAA;IAAA;EAAA,QACT;AAEf,CAAC;AAAC,GA5CIL,QAAQ;AAAA,KAARA,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}