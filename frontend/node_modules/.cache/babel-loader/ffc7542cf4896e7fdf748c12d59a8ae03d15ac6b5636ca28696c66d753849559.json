{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\GroupFlow Project\\\\GroupFlow\\\\frontend\\\\src\\\\views\\\\Home.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from 'react';\nimport GroupList from '../components/GroupList';\nimport MemberOfList from '../components/MemberofList';\nimport useAxios from \"../utils/useAxios\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [flag, setFlag] = useState(false);\n  const [groupList, setGroupList] = useState([]);\n  const [memberOfList, setMemberOfList] = useState([]);\n  const [username, setUsername] = useState(0);\n  const api = useAxios();\n  const [newGroupName, setNewGroupName] = useState('');\n  const [newGroupDescription, setNewGroupD] = useState('');\n  const [memberOfGroups, setMemberOfGroups] = useState([]);\n  const changeFlag = () => {\n    setFlag(!flag);\n  };\n  useEffect(() => {\n    const load_g = async () => {\n      const un = await api.get(\"/username/\");\n      setUsername(un.data.response);\n      let res1 = await axios.get('http://127.0.0.1:8000/api/groups/');\n      await setGroupList(res1.data);\n      let res2 = await axios.get('http://127.0.0.1:8000/api/group_member/');\n      await setMemberOfList(res2.data);\n      let i = 0;\n      let mg = [];\n      for (i in memberOfList) {\n        let j = 0;\n        for (j in groupList) {\n          if (memberOfList[i]['groups'] === groupList[j]['id'] && memberOfList[i]['members'] === username) {\n            console.log(i);\n          }\n        }\n      }\n    };\n    load_g();\n  }, [flag]);\n  const AddGroup = async () => {\n    let formField = new FormData();\n    formField.append('name', newGroupName);\n    formField.append('description', newGroupDescription);\n    formField.append('owner', username);\n    await axios({\n      method: 'post',\n      url: 'api/groups/',\n      data: formField\n    }).then(res => {\n      console.log(res.data);\n    });\n    changeFlag();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Group Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          id: \"name\",\n          onChange: e => setNewGroupName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          id: \"Description\",\n          onChange: e => setNewGroupD(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => AddGroup(),\n          children: \" Create Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" Welcome \", username, \", Groups you own\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      lg: 3,\n      children: groupList === null || groupList === void 0 ? void 0 : groupList.filter(group => group.owner === username).map(group => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(GroupList, {\n            id: group.id,\n            name: group.name,\n            description: group.description,\n            owner: group.owner,\n            changeFlag: changeFlag\n          }, group.id - 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, group.id + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)]\n        }, group.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" You are member of\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      lg: 3,\n      children: memberOfList === null || memberOfList === void 0 ? void 0 : memberOfList.filter(memof => memof.members === username).map(memof => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(MemberOfList, {\n            gid: memof.groups,\n            changeFlag: changeFlag\n          }, memof.id - 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, memof.id + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)]\n        }, memof.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"bIDQC7hOgZhvcvpStObOwLcJlLk=\", false, function () {\n  return [useAxios];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["axios","React","useEffect","useState","GroupList","MemberOfList","useAxios","Container","Row","Col","Form","Button","Home","flag","setFlag","groupList","setGroupList","memberOfList","setMemberOfList","username","setUsername","api","newGroupName","setNewGroupName","newGroupDescription","setNewGroupD","memberOfGroups","setMemberOfGroups","changeFlag","load_g","un","get","data","response","res1","res2","i","mg","j","console","log","AddGroup","formField","FormData","append","method","url","then","res","e","target","value","filter","group","owner","map","id","name","description","memof","members","groups"],"sources":["D:/Downloads/GroupFlow Project/GroupFlow/frontend/src/views/Home.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, {useEffect, useState} from 'react';\r\nimport GroupList from '../components/GroupList'\r\nimport MemberOfList from '../components/MemberofList'\r\nimport useAxios from \"../utils/useAxios\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\n\r\n\r\nfunction Home(){\r\n    const [flag, setFlag] = useState(false)\r\n    const [groupList, setGroupList] = useState([])\r\n    const [memberOfList, setMemberOfList] = useState([])\r\n    const [username, setUsername] = useState(0)\r\n    const api = useAxios();\r\n    const [newGroupName, setNewGroupName] = useState('')\r\n    const [newGroupDescription, setNewGroupD] = useState('')\r\n    const [memberOfGroups, setMemberOfGroups] = useState([])\r\n\r\n    const changeFlag = () =>{\r\n      setFlag(!flag)\r\n    }\r\n    useEffect(() => {\r\n      const load_g = async ()=>{\r\n        \r\n\r\n        const un = await api.get(\"/username/\");\r\n        setUsername(un.data.response);\r\n\r\n        let res1 = await axios.get('http://127.0.0.1:8000/api/groups/')\r\n        await setGroupList(res1.data)\r\n\r\n\r\n        let res2 = await axios.get('http://127.0.0.1:8000/api/group_member/')\r\n        await setMemberOfList(res2.data)\r\n\r\n        let i = 0\r\n        let mg = []\r\n        for (i in memberOfList){\r\n            let j = 0\r\n            for( j in groupList){\r\n               if(memberOfList[i]['groups'] === groupList[j]['id'] && memberOfList[i]['members'] === username ){\r\n                    console.log(i)\r\n               }\r\n            }\r\n        }\r\n        \r\n      }\r\n      load_g()\r\n\r\n  \r\n    }, [flag])\r\n\r\n    const AddGroup = async () =>{\r\n        let formField = new FormData()\r\n\r\n        formField.append('name', newGroupName)\r\n        formField.append('description', newGroupDescription)\r\n        formField.append('owner', username)\r\n\r\n        await axios({\r\n            method: 'post',\r\n            url: 'api/groups/',\r\n            data: formField\r\n        }).then(res =>{\r\n            console.log(res.data)\r\n        })\r\n        changeFlag()\r\n    }\r\n\r\n    return(\r\n    <Container className=\"Home\">\r\n        <Row>\r\n            <Col xs={12} md={8}>\r\n                <h3>Create New Group</h3>\r\n                <Form.Label>Group Name</Form.Label>\r\n                <Form.Control type=\"text\" id=\"name\" onChange={(e) => setNewGroupName(e.target.value)}/>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control type=\"text\" id=\"Description\" onChange={(e) => setNewGroupD(e.target.value)}/>\r\n                <br></br>\r\n                <Button onClick={() => AddGroup()}> Create Group</Button>\r\n            </Col>\r\n        </Row>\r\n        <hr></hr>\r\n        <h3> Welcome {username}, Groups you own</h3>\r\n        <Row xs={1} lg={3}>\r\n        {groupList?.filter(group => group.owner === username).map((group) =>{\r\n            return( \r\n                <Col key = {group.id}>\r\n                    <GroupList key = {group.id - 1} id = {group.id} name = {group.name} description = {group.description} owner = {group.owner} changeFlag = {changeFlag}/>\r\n                    <br key = {group.id + 1}></br>\r\n                </Col>\r\n            )})}\r\n        </Row>\r\n        <hr></hr>\r\n        <h3> You are member of</h3>\r\n        <Row xs={1} lg={3}>\r\n        {memberOfList?.filter(memof => memof.members === username).map((memof) =>{\r\n            return( \r\n                <Col key = {memof.id}>\r\n                    <MemberOfList key = {memof.id - 1} gid = {memof.groups}  changeFlag = {changeFlag}/>\r\n                    <br key = {memof.id + 1}></br>\r\n                </Col>\r\n            )})}\r\n        </Row>\r\n        \r\n    </Container>\r\n      )\r\n  }\r\n\r\n  export default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}